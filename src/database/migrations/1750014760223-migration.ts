import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration1750014760223 implements MigrationInterface {
    name = 'Migration1750014760223'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('estudiante', 'profesor', 'administrador')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying(255) NOT NULL, "full_name" character varying(255) NOT NULL, "role" "public"."users_role_enum" NOT NULL DEFAULT 'estudiante', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")); COMMENT ON COLUMN "users"."email" IS 'Correo electrónico del usuario'; COMMENT ON COLUMN "users"."full_name" IS 'Nombre completo del usuario'; COMMENT ON COLUMN "users"."role" IS 'Rol del usuario'; COMMENT ON COLUMN "users"."created_at" IS 'Fecha de creación del usuario'; COMMENT ON COLUMN "users"."updated_at" IS 'Fecha de última actualización del usuario'; COMMENT ON COLUMN "users"."deleted_at" IS 'Fecha de eliminación del usuario'`);
        await queryRunner.query(`CREATE TABLE "videos" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "title" character varying(255) NOT NULL, "description" text, "file_key" character varying(255) NOT NULL, "file_url" character varying(255) NOT NULL, "content_type" character varying(100) NOT NULL, "file_size" integer, "upload_duration" integer NOT NULL DEFAULT '0', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_e4c86c0cf95aff16e9fb8220f6b" PRIMARY KEY ("id")); COMMENT ON COLUMN "videos"."title" IS 'Título del video'; COMMENT ON COLUMN "videos"."description" IS 'Descripción del video'; COMMENT ON COLUMN "videos"."file_key" IS 'Clave del archivo en S3'; COMMENT ON COLUMN "videos"."file_url" IS 'URL del archivo en S3'; COMMENT ON COLUMN "videos"."content_type" IS 'Tipo de contenido del archivo'; COMMENT ON COLUMN "videos"."file_size" IS 'Tamaño del archivo en bytes'; COMMENT ON COLUMN "videos"."upload_duration" IS 'Duración de la subida en segundos'; COMMENT ON COLUMN "videos"."created_at" IS 'Fecha de creación del registro'; COMMENT ON COLUMN "videos"."updated_at" IS 'Fecha de última actualización del registro'; COMMENT ON COLUMN "videos"."deleted_at" IS 'Fecha de eliminación del registro'`);
        await queryRunner.query(`CREATE TYPE "public"."video_bookmarks_bookmarktype_enum" AS ENUM('default', 'custom')`);
        await queryRunner.query(`CREATE TABLE "video_bookmarks" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "bookmarkType" "public"."video_bookmarks_bookmarktype_enum" NOT NULL, "note" character varying, "position" double precision, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "userId" uuid, "videoId" uuid, CONSTRAINT "PK_8b0702e08082f84ffce201fb8d6" PRIMARY KEY ("id")); COMMENT ON COLUMN "video_bookmarks"."created_at" IS 'Fecha de creación del usuario'; COMMENT ON COLUMN "video_bookmarks"."updated_at" IS 'Fecha de última actualización del usuario'; COMMENT ON COLUMN "video_bookmarks"."deleted_at" IS 'Fecha de eliminación del usuario'`);
        await queryRunner.query(`CREATE TABLE "manuals" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "title" character varying(255) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_3366a085157a037127989504ce0" UNIQUE ("title"), CONSTRAINT "PK_ff041e52910af133b601ce3c707" PRIMARY KEY ("id")); COMMENT ON COLUMN "manuals"."title" IS 'Título del manual'; COMMENT ON COLUMN "manuals"."created_at" IS 'Fecha de creación del manual'; COMMENT ON COLUMN "manuals"."updated_at" IS 'Fecha de última actualización del manual'; COMMENT ON COLUMN "manuals"."deleted_at" IS 'Fecha de eliminación del manual'`);
        await queryRunner.query(`CREATE TABLE "sections" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "title" character varying(255) NOT NULL, "order" integer NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "manualId" uuid, CONSTRAINT "UQ_c673c8ef8cac3fe461b73297f36" UNIQUE ("title"), CONSTRAINT "PK_f9749dd3bffd880a497d007e450" PRIMARY KEY ("id")); COMMENT ON COLUMN "sections"."title" IS 'Título de la sección del manual'; COMMENT ON COLUMN "sections"."order" IS 'orden de la sección del manual'; COMMENT ON COLUMN "sections"."created_at" IS 'Fecha de creación de la sección'; COMMENT ON COLUMN "sections"."updated_at" IS 'Fecha de última actualización de la sección'; COMMENT ON COLUMN "sections"."deleted_at" IS 'Fecha de eliminación de la sección'`);
        await queryRunner.query(`CREATE TABLE "subsections" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "title" character varying(255) NOT NULL, "order" text, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "sectionId" uuid, CONSTRAINT "UQ_4e6b47e1484b626beb4da683157" UNIQUE ("title"), CONSTRAINT "PK_1229930013cb47ceb1d98bccbc9" PRIMARY KEY ("id")); COMMENT ON COLUMN "subsections"."title" IS 'Título de la subsección del manual'; COMMENT ON COLUMN "subsections"."order" IS 'Orden de la subsección del manual'; COMMENT ON COLUMN "subsections"."created_at" IS 'Fecha de creación de la subsección'; COMMENT ON COLUMN "subsections"."updated_at" IS 'Fecha de última actualización de la subsección'; COMMENT ON COLUMN "subsections"."deleted_at" IS 'Fecha de eliminación de la subsección'`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_block_type_enum" AS ENUM('text', 'video')`);
        await queryRunner.query(`CREATE TABLE "blocks" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "block_type" "public"."blocks_block_type_enum" NOT NULL DEFAULT 'text', "content" text NOT NULL, "order" integer, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP DEFAULT now(), "subsectionId" uuid, CONSTRAINT "PK_8244fa1495c4e9222a01059244b" PRIMARY KEY ("id")); COMMENT ON COLUMN "blocks"."block_type" IS 'Tipo de bloque del manual'; COMMENT ON COLUMN "blocks"."content" IS 'Contenido del bloque del manual'; COMMENT ON COLUMN "blocks"."order" IS 'Orden del bloque dentro de la subsección del manual'; COMMENT ON COLUMN "blocks"."created_at" IS 'Fecha de creación del bloque'; COMMENT ON COLUMN "blocks"."updated_at" IS 'Fecha de última actualización del bloque'; COMMENT ON COLUMN "blocks"."deleted_at" IS 'Fecha de eliminación del bloque'`);
        await queryRunner.query(`CREATE TABLE "video_comments" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "comment" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "userId" uuid, "videoId" uuid, CONSTRAINT "PK_bfe25ab13a4b2e47a3da9b3302a" PRIMARY KEY ("id")); COMMENT ON COLUMN "video_comments"."created_at" IS 'Fecha de creación del usuario'; COMMENT ON COLUMN "video_comments"."updated_at" IS 'Fecha de última actualización del usuario'; COMMENT ON COLUMN "video_comments"."deleted_at" IS 'Fecha de eliminación del usuario'`);
        await queryRunner.query(`CREATE TYPE "public"."video_interactions_type_enum" AS ENUM('like', 'dislike', 'view')`);
        await queryRunner.query(`CREATE TABLE "video_interactions" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "type" "public"."video_interactions_type_enum" NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "userId" uuid, "videoId" uuid, CONSTRAINT "PK_57748e09863fa39db2012bc2d93" PRIMARY KEY ("id")); COMMENT ON COLUMN "video_interactions"."created_at" IS 'Fecha de creación del usuario'; COMMENT ON COLUMN "video_interactions"."updated_at" IS 'Fecha de última actualización del usuario'; COMMENT ON COLUMN "video_interactions"."deleted_at" IS 'Fecha de eliminación del usuario'`);
        await queryRunner.query(`CREATE TYPE "public"."video_reports_status_enum" AS ENUM('pending', 'reviewed', 'rejected', 'approved')`);
        await queryRunner.query(`CREATE TABLE "video_reports" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "reason" character varying NOT NULL, "status" "public"."video_reports_status_enum" NOT NULL DEFAULT 'pending', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP DEFAULT now(), "userId" uuid, "videoId" uuid, CONSTRAINT "PK_5286d16620d62431c2f50229d0d" PRIMARY KEY ("id")); COMMENT ON COLUMN "video_reports"."created_at" IS 'Fecha de creación del reporte de video'; COMMENT ON COLUMN "video_reports"."updated_at" IS 'Fecha de última actualización del reporte de video'; COMMENT ON COLUMN "video_reports"."deleted_at" IS 'Fecha de eliminación del reporte de video'`);
        await queryRunner.query(`ALTER TABLE "video_bookmarks" ADD CONSTRAINT "FK_9aaeba563f7a353c44ff566ccde" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_bookmarks" ADD CONSTRAINT "FK_645ee0d5a5483392b674489e091" FOREIGN KEY ("videoId") REFERENCES "videos"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sections" ADD CONSTRAINT "FK_b8c3c9258dcaf3a820ced880028" FOREIGN KEY ("manualId") REFERENCES "manuals"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "subsections" ADD CONSTRAINT "FK_93c2cb50e5efca783ba4dccaa0e" FOREIGN KEY ("sectionId") REFERENCES "sections"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD CONSTRAINT "FK_8a335af50f72f3257532b0f80f5" FOREIGN KEY ("subsectionId") REFERENCES "subsections"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_comments" ADD CONSTRAINT "FK_1ffa7626ff39614e7997a3ec76c" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_comments" ADD CONSTRAINT "FK_2ba4e7417c624e7112b5fff0021" FOREIGN KEY ("videoId") REFERENCES "videos"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_interactions" ADD CONSTRAINT "FK_bcfb9c9c8fc1802d69b22c9cc98" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_interactions" ADD CONSTRAINT "FK_a9a79a58933f7802b2613b84c70" FOREIGN KEY ("videoId") REFERENCES "videos"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_reports" ADD CONSTRAINT "FK_3ead8110673e1eb8c26c14b0b23" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "video_reports" ADD CONSTRAINT "FK_976cd30f703772b1c880d15239a" FOREIGN KEY ("videoId") REFERENCES "videos"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "video_reports" DROP CONSTRAINT "FK_976cd30f703772b1c880d15239a"`);
        await queryRunner.query(`ALTER TABLE "video_reports" DROP CONSTRAINT "FK_3ead8110673e1eb8c26c14b0b23"`);
        await queryRunner.query(`ALTER TABLE "video_interactions" DROP CONSTRAINT "FK_a9a79a58933f7802b2613b84c70"`);
        await queryRunner.query(`ALTER TABLE "video_interactions" DROP CONSTRAINT "FK_bcfb9c9c8fc1802d69b22c9cc98"`);
        await queryRunner.query(`ALTER TABLE "video_comments" DROP CONSTRAINT "FK_2ba4e7417c624e7112b5fff0021"`);
        await queryRunner.query(`ALTER TABLE "video_comments" DROP CONSTRAINT "FK_1ffa7626ff39614e7997a3ec76c"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP CONSTRAINT "FK_8a335af50f72f3257532b0f80f5"`);
        await queryRunner.query(`ALTER TABLE "subsections" DROP CONSTRAINT "FK_93c2cb50e5efca783ba4dccaa0e"`);
        await queryRunner.query(`ALTER TABLE "sections" DROP CONSTRAINT "FK_b8c3c9258dcaf3a820ced880028"`);
        await queryRunner.query(`ALTER TABLE "video_bookmarks" DROP CONSTRAINT "FK_645ee0d5a5483392b674489e091"`);
        await queryRunner.query(`ALTER TABLE "video_bookmarks" DROP CONSTRAINT "FK_9aaeba563f7a353c44ff566ccde"`);
        await queryRunner.query(`DROP TABLE "video_reports"`);
        await queryRunner.query(`DROP TYPE "public"."video_reports_status_enum"`);
        await queryRunner.query(`DROP TABLE "video_interactions"`);
        await queryRunner.query(`DROP TYPE "public"."video_interactions_type_enum"`);
        await queryRunner.query(`DROP TABLE "video_comments"`);
        await queryRunner.query(`DROP TABLE "blocks"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_block_type_enum"`);
        await queryRunner.query(`DROP TABLE "subsections"`);
        await queryRunner.query(`DROP TABLE "sections"`);
        await queryRunner.query(`DROP TABLE "manuals"`);
        await queryRunner.query(`DROP TABLE "video_bookmarks"`);
        await queryRunner.query(`DROP TYPE "public"."video_bookmarks_bookmarktype_enum"`);
        await queryRunner.query(`DROP TABLE "videos"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
    }

}
